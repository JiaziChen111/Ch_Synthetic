%% Forward Premium
% This code calculates the market-implied forward premium using forward and
% spot exchange rates (for short maturities) and cross-currency swaps (for 
% longer maturities).
% Assumes that read_platform.m and read_usyc.m have already been run.
% m-files called: compute_fp_long.m, remove_NaNcols.m
%
% Pavel Solís (pavel.solis@gmail.com), March 2019
%% Construct the CCS Database

LCs = unique(TH_daily.Currency,'stable');
LCs(ismember(LCs,'USD')) = [];            % Countries in the dataset other than the U.S.
if ~any(strcmp(LCs,'GBP'))                % If no advanced countries, omit 'EUR' (from HUF and PLN)
    LCs(ismember(LCs,'EUR')) = []; 
else                                      % Otherwise, relocate 'EUR'
    idxEUR = find(strcmp(LCs,'EUR'));
    idxGBP = find(strcmp(LCs,'GBP'));
    LCs    = LCs([1:idxEUR-1, idxEUR+1:idxGBP-1, idxEUR, idxGBP:end]);
end

% LCs  = sheets(3:end);       % Local currencies ('sheets' generated by read_tickers_v4.m)
% LCs  = ['BRL', LCs]';       % Two formulas for Brazil
% frml = [1,6,1,2,1,3,4,1,1,2,7,1,3,8,5,3]'; % See compute_fp_long.m
% frml = [1,1,2,1,3,1,4,3,2,7,1,3,8,5,3,repmat(3,1,10)]'; % See compute_ccs.m
hdr_ccs  = {};              % No row 1 with titles (ie ready to be appended)
% data_ccs = dates;           % 'dates' generated by read_bloomberg.m
data_ccs = datenum(TT_daily.Date);

for k = 1:numel(LCs) % hdr_blp & data_blp generated by read_tickers_v4.m & read_bloomberg.m
%     LCs{k}
    [CCS,hdr] = compute_fp_long(LCs{k},header_daily,dataset_daily);
    hdr_ccs   = [hdr_ccs; hdr];
    data_ccs  = [data_ccs, CCS];
end

[data_ccs,hdr_ccs] = remove_NaNcols(hdr_ccs,data_ccs);

%% Report CCS Tenors per Currency
tnrperLCccs = {};              % Count only after remove_NaNcols.m is called
LC_once = unique(hdr_ccs(:,1));
for k = LC_once'
    ntnrperLC = sum(strcmp(hdr_ccs(:,1),k));
    tnrperLCccs  = [tnrperLCccs; k, 'CCS', ntnrperLC];
end

clear k fltrNaN LCs LC_once nLC CCS hdr hdr_tmp ntnrperLC frml
