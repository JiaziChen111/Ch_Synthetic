function [dataset_monthly,header_monthly,stats_rp_cty,stats_rp_mat,...
    pc_exp] = rp_estimation(data_month,hdr_month,YCtype,ctrsNcods)
% This function estimates the risk premia in (fitted N-S) LC yield curves;
% uses dataset generated by fit_NS.m.
% Calls to m-files: fit_ATSM.m, construct_monthly_hdr.m
%
%     INPUTS
% data_month - matrix with monthly obs of N-S curves as rows, col1 has dates
% hdr_month  - cell with names for the columns of data_monthly
% YCtype     - char with the type of LC yield curve to decompose (ie risky or risk-free)
% ctrsNcods  - cell with countries (and their IMF codes) to estimate
%
%     OUTPUT
% dataset_monthly - matrix with end-of-month N-S curves and their decomposition
% header_monthly  - cell with names for the columns of dataset_monthly
% stats_rp_cty    - 3D matrix with TP statistics for all maturities per country
% stats_rp_mat    - 3D matrix with TP statistics for all countries per maturity
% pc_exp          - cell with the proportion of variation explained by first PCs
% 
% Pavel Solís (pavel.solis@gmail.com), April/October 2018
%%
fltrYLD    = ismember(hdr_month(:,1),[YCtype 'NS']);
fltrPRM    = ismember(hdr_month(:,1),[YCtype 'PARAM']);
tnrmax     = 10;                                % Maximum tenor needed is 10yrs
maturities = [0.25 1:tnrmax];                   % Maturities in N-S yield curves
mats2estim = maturities(2:end);                 % Number of yields to be estimated
times      = linspace(0,tnrmax);                % Used for plots
IDs        = cell2mat(ctrsNcods(:,2));
ctrsLC     = ctrsNcods(:,1);

pc_exp_aux      = [];
dataset_monthly = [];
for k = 1:numel(IDs)
    % Extract information
    id      = IDs(k);
    fltrCTY = data_month(:,2) == id;
    ydata   = data_month(fltrCTY,fltrYLD);
    params  = data_month(fltrCTY,fltrPRM);      % Used for plots
    date    = data_month(fltrCTY,1);            % Used for plots
    
    % ATSM fitted yields
    [yieldsQ,yieldsP,yieldsE,rmse,explained] = fit_ATSM(mats2estim,ydata);
    % risk_premia = yieldsQ - yieldsP;          % obs x mats2estim!
    risk_premia = ydata - yieldsE; %= ydata(:,2:end)-yieldsE; when update fit_ATSM ie 10 mats in yieldsE
    dataset_monthly = [dataset_monthly; data_month(fltrCTY,:),...
                      yieldsE(:,2:end),yieldsQ,yieldsP,risk_premia(:,2:end),rmse];
    pc_exp_aux      = [pc_exp_aux explained];
    
    % To report statistics for all maturities per country
    w = yieldsE(:,2:end); y = ydata(:,2:end); z = risk_premia(:,2:end);
    stats_rp_cty(:,:,k) = [mats2estim; mean(y); std(y); mean(z); std(z); max(z); min(z); 
                          mean(w); std(w); repmat(size(z,1),1,size(z,2))];
    
    % Plot yields: N-S v. Expected v. ATSM
    for l = 1:size(ydata,1)
        plot(times,y_NS(params(l,:),times),'r-',...
            mats2estim,yieldsQ(l,:),'c*',mats2estim,yieldsP(l,:),'b--o',...
            maturities,yieldsE(l,:),'mx') % [!]
        title([ctrsLC{k} '  ' datestr(date(l))])
        H(l) = getframe(gcf);
    end
    clear H
    close
end

% Header
hdr_lc2        = construct_monthly_hdr(maturities,YCtype,2);
header_monthly = [hdr_month; hdr_lc2];

% Statistics
stats_rp_cty = round(stats_rp_cty,2);
for l = 1:numel(mats2estim)                     % To report all countries per maturity
    stats_rp_mat(:,:,l) = squeeze(stats_rp_cty(:,l,:));
end
pc_exp = [ctrsLC'; num2cell(round(pc_exp_aux(1:3,:),2)); num2cell(round(sum(pc_exp_aux(1:3,:)),2))];
pc_exp(2:end,:) = cellfun(@num2str,pc_exp(2:end,:),'UniformOutput',false); 
 