%% LC and FC Credit Spreads
% This code uses yield curves and cross-currency swaps to construct a credit
% spread (CS) database. 
% Assumes that read_usyc.m and ccs.m have already been run and the results
% appended to generate 'header_daily' and 'dataset_daily' (see read_data.m).
% Calls to m-files: compute_csp.m, remove_NaNcols.m
%
% Pavel Solís (pavel.solis@gmail.com), March 2018
%% Identify Countries with LC and FC
fltrRHO  = ismember(header_daily(:,2),'RHO');        % 1 for countries with CCS data
fltrFC   = ismember(header_daily(:,2),'USD');        % 1 for countries with FC data
ctrsLC   = unique(header_daily(fltrRHO,1),'stable'); % Countries with LC data
ctrsFC   = unique(header_daily(fltrFC,1),'stable');  % Countries with FC data
ctrs     = {ctrsLC', ctrsFC'};

%% Construct the CS Database
hdr_csp  = {};                           % No row 1 with titles (ie ready to be appended)
data_csp = dates;                        % 'dates' generated by read_bloomberg.m

for k = 1:2                              % 1 for LC, 2 for FC
    countries = ctrs{k};                 % ctrs{1} = ctrsLC, ctrs{2} = ctrsFC
    hdr_aux = {};    data_aux  = [];     % Temporarily store results
    for l = 1:numel(countries)           % For all countries with LC or FC
        LC = countries{l};
        [CS,hdr] = compute_csp(LC,k,header_daily,dataset_daily);
        hdr_aux  = [hdr_aux; hdr];       % After each currency, append
        data_aux = [data_aux, CS];
    end
    hdr_csp  = [hdr_csp; hdr_aux];       % Once LC & FC done for all countries, append
    data_csp = [data_csp, data_aux];    
end

[data_csp,hdr_csp] = remove_NaNcols(hdr_csp,data_csp);

%% Report CS Tenors per Currency
tnrperLCcsp = {};                   % Count only after remove_NaNcols.m is called
LoFC = {'LCCS','FCCS'};
for k = 1:2                         % 1 for LC, 2 for FC
    countries = ctrs{k};            % ctrs{1}=ctrsLC, ctrs{2}=ctrsFC
    for l = 1:numel(countries)      % For all countries with LC or FC
        LC = countries{l};
        ntnrperLC = sum(strcmp(hdr_csp(:,1),LC) & strcmp(hdr_csp(:,2),LoFC{k}));
        tnrperLCcsp  = [tnrperLCcsp; LC, LoFC(k), ntnrperLC];
    end
end

clear k l LC CS hdr fltr* hdr_aux data_aux ntnrperLC LoFC countries ctrs
