function S = forecastLTcbpol(S,currEM,weightsLT,namesWgts)
% This function estimates the long-term forecast of the policy rates of emerging
% markets (EMs) using long-term forecasts of inflation and real GDP growth
% from Consensus Economics and the weights of a smoothed Taylor rule.
%
%	INPUTS
% struct: S         - contains names of countries/currencies, codes and YC data
% char: currEM      - ISO currency codes of EM in the sample
% double: weightsLT - coefficients to apply to LT inflation and output growth forecasts
% cell: namesWgts   - names of the coefficients
%
%	OUTPUT
% struct: S - adds the estimated long-term forecast for the policy rates of EMs
%
%   ASSUMPTIONS
% S in input is generated by estimate_TR.m
% m-files called: none
% 
% Pavel Solís (pavel.solis@gmail.com), May 2019
%%
run read_forecasts.m

fltrLT  = ismember(hdr_ce(:,3),'LONG TERM');
nEMs    = length(currEM);
fltrCPT = contains(namesWgts,'(');
fltrINF = contains(namesWgts,'INF');
fltrGDP = contains(namesWgts,'GDP');

for k = 1:nEMs
    bCPT = weightsLT(fltrCPT,k);
    bINF = weightsLT(fltrINF,k);
    bGDP = weightsLT(fltrGDP,k);
    
    fltrCTY     = ismember(hdr_ce(:,1),S(k).iso) & fltrLT;
    fltrCTY(1)  = true;                                           % Include dates
    data_fcst   = data_ce(:,fltrCTY);
    namesLTvars = hdr_ce(fltrCTY,2);
    
    fltrsvyINF    = contains(namesLTvars,'CPI');
    fltrsvyGDP    = contains(namesLTvars,'GDP');
    data_svyINF   = data_fcst(:,fltrsvyINF);
    data_svyGDP   = data_fcst(:,fltrsvyGDP);
    data_svyINT   = bCPT + bINF*data_svyINF + bGDP*data_svyGDP;
    S(k).srvyldsE = [data_fcst(:,1) data_svyINT];
end